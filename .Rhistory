npm install
install.packages("multicool")
multinom(c(3, 2, 1), counts=TRUE)
library(multicool)
multinom(c(3, 2, 1), counts=TRUE)
library(readxl)
result_excel <- read_excel("C:/Users/simon/Project/python3/spotify-stats/result_excel.xlsx")
View(result_excel)
Total <- as.numeric(result_excel$Popularity)
reads <- as.numeric(result_excel$Read)
reads
total <- Reduce("+", reads)
total
probability <- Map(reads, ~ .x / total)
probability <- Map(~ .x / total, reads)
probability <- Map(.x / total, reads)
probability <- Map(.reads / total, reads)
probability <- Map((function(x) x / total), reads)
probability
music <- result_excel$Track
music
plot(music, probability)
plot(probability)
plot(range(0, 201), probability)
plot(range(0, 20), probability)
plot(range(0, 200), probability)
plot(range(1, 201), probability)
probability
plot(range(1, 202), probability)
plot(range(1, 201), probability)
lengths(probability)
lengths(probabilit)
plot(range(1, 201), probability[1])
lengths(probability)
lengths(probability[1])
lengths(probability)
probability
plot(probability)
plot(range(1, 201), probability[0])
probability <- Reduce((function(x) x / total), reads)
plot(range(1, 201), probability[i])
plot(range(1, 201), reads)
length(reads)
lengths(range(1, 201))
lengths(range(201))
index <- range(1, 201)
plot(range(i, probability[i])
plot(i, probability[i])
index <- seq(1, 201)
plot(index, probability)
reads <- as.numeric(result_excel$Read)
total <- Reduce("+", reads)
probability <- Map((function(x) x / total), reads)
plot(seq(1, 201), probability)
plot(seq(1, 201), probability)
table <- result_excel
table <- sort(table)
table <- sort(table[2])
dataframe[]
table[]
table[with(table, order(read))]
table[with(table, order(Read))]
table[order(table[2])]
table[order(table$Read)]
table[order(table$Read),]
display_prob
plot(seq(1, 201), probability)
table[order(table$Read),]
table
table <- table[order(table$Read),]
table
plot(seq(1, 201), probability)
display_probability(table)
display_probability <- function(table)
reads <- table$Read
total <- Reduce("+", reads)
probability <- Map((function(x) x/total), reads)
plot(seq(1, 201), probability)
display_probability(table)
display_probability(table)
table
plot(seq(1, 201), Map((function(x) x/Reduce("+", table$Read)), table$Read)))
plot(seq(1, 201), Map((function(x) x/Reduce("+", table$Read)), table$Read))
plot(seq(1, 201), Map((function(x) x/Reduce("+", table$Read)), table$Read), col= "red")
x <- seq(1, 201)
plot(x, Map((function(x) x/Reduce("+", table$Read)), table$Read), col = "red")
plot(x, Map((function(x) x/Reduce("+", table$Read)), table$Read), col = "red")
plot(x, table$Popularity, col = "blue")
plot(x, probability, type="l", col="red")
plot(x, popularities, col="green")
plot(x, popularities, col="green")
table <- result_excel
table <- table[order(table$Read), ]
reads <- table$Read
popularities <- table$Popularity
total <- Reduce("+", reads)
probability <- Map((function(x) x/total), reads)
x <- seq(1, 201)
plot(x, probability, col="red")
par(new=TRUE)
plot(x, popularities, col="green")
library(readxl)
result_excel <- read_excel("C:/Users/simon/Project/python3/spotify-stats/result_excel.xlsx")
View(result_excel)
result_excel <- read_excel("C:/Users/simon/Project/python3/spotify-stats/result_excel.xlsx")
table <- result_excel
table <- table[order(table$Read), ]
reads <- table$Read
popularities <- table$Popularity
total <- Reduce("+", reads)
probability <- Map((function(x) x/total), reads)
x <- seq(1, 201)
plot(x, probability, col="red")
par(new=TRUE)
plot(x, popularities, col="blue")
source("C:/Users/simon/Project/python3/spotify-stats/main.R")
source("C:/Users/simon/Project/python3/spotify-stats/main.R")
run()
run()
run()
source("C:/Users/simon/Project/python3/spotify-stats/main.R")
run()
source("C:/Users/simon/Project/python3/spotify-stats/main.R")
run()
source("C:/Users/simon/Project/python3/spotify-stats/main.R")
run()
source("C:/Users/simon/Project/python3/spotify-stats/main.R")
run()
source("C:/Users/simon/Project/python3/spotify-stats/main.R")
run()
source("C:/Users/simon/Project/python3/spotify-stats/main.R")
run()
source("C:/Users/simon/Project/python3/spotify-stats/main.R")
run()
source("C:/Users/simon/Project/python3/spotify-stats/main.R")
run()
source("C:/Users/simon/Project/python3/spotify-stats/main.R")
run()
source("C:/Users/simon/Project/python3/spotify-stats/main.R")
run()
source("C:/Users/simon/Project/python3/spotify-stats/main.R")
run()
source("C:/Users/simon/Project/python3/spotify-stats/main.R")
run()
source("C:/Users/simon/Project/python3/spotify-stats/main.R")
run()
source("C:/Users/simon/Project/python3/spotify-stats/main.R")
run()
print(result)
source("C:/Users/simon/Project/python3/spotify-stats/main.R")
run()
source("C:/Users/simon/Project/python3/spotify-stats/main.R")
run()
cor.test(popularities, reads)
test <- cor.test(popularities, reads)
test
report <- cor.test(popularities, reads)
report
print(report)
print("Correlation test: " +report)
source("C:/Users/simon/Project/python3/spotify-stats/main.R")
run()
correlationTest
source("C:/Users/simon/Project/python3/spotify-stats/main.R")
run
run()
lm(popularities ~ reads)
cor.test(popularities, reads)
lm(popularities ~ reads)
cor.test(reads, popularities)
cor(reads, popularities)
cor.test(reads, popularities)
cor.test(reads, popularities, method=spearman )
cor.test(reads, popularities, method="spearman" )
gc()
gc()
run <- function(){
initialize()
compare_graph()
linear_pearson()
}
library(readxl)
initialize <- function(){
print("Initializing")
result_excel <- read_excel("C:/Users/simon/Project/python3/spotify-stats/result_excel.xlsx")
table <- result_excel
table <- table[order(table$Read), ]
popularities <- table$Popularity
reads <- table$Read
x <- seq(1, 201)
}
compare_graph <- function(){
print("Generate graphic")
plot(x, reads, col="red", xlab="Music", ylab="Reads")
par(new=TRUE)
plot(x, popularities, col="blue", axes = FALSE, xlab="", ylab="")
axis(side = 4, at = pretty(range(popularities)))
mtext("Popularity", side = 4, line = 50)
}
linear_pearson <- function(){
print("Test corelation from pearson")
pearson <- cor.test(popularities, reads)
abline(pearson)
}
other <- function(){
print("Cor.test")
cor.test(popularities, reads)
correlationTest <- cor.test(popularities, reads)
correlationTest
print("Linear model")
lm(popularities ~ reads)
linearModel <- lm(popularities ~ reads)
linearModel
}
run <- function(){
initialize()
compare_graph()
linear_pearson()
}
run()
source("C:/Users/simon/Project/python3/spotify-stats/main.R")
source("C:/Users/simon/Project/python3/spotify-stats/main.R")
source("C:/Users/simon/Project/python3/spotify-stats/main.R")
library(readxl)
print("Initializing")
result_excel <- read_excel("C:/Users/simon/Project/python3/spotify-stats/result_excel.xlsx")
table <- result_excel
table <- table[order(table$Read), ]
popularities <- table$Popularity
reads <- table$Read
x <- seq(1, 201)
compare_graph <- function(){
print("Generate graphic")
plot(x, reads, col="red", xlab="Music", ylab="Reads")
par(new=TRUE)
plot(x, popularities, col="blue", axes = FALSE, xlab="", ylab="")
axis(side = 4, at = pretty(range(popularities)))
mtext("Popularity", side = 4, line = 50)
}
linear_pearson <- function(){
print("Test corelation from pearson")
pearson_result <- cor.test(popularities, reads)
pearson_result
abline(pearson_result)
}
other <- function(){
print("Cor.test")
cor.test(popularities, reads)
correlationTest <- cor.test(popularities, reads)
correlationTest
print("Linear model")
lm(popularities ~ reads)
linearModel <- lm(popularities ~ reads)
linearModel
}
run <- function(){
compare_graph()
linear_pearson()
}
run()
pearson_result <- cor.test(popularities, reads)
pearson_result
abline(pearson_result)
line <- abline(pearson_result)
abline(coef=pearson_result)
abline(reg=pearson_result)
data _ abline(reg=pearson_result)
data <- abline(reg=pearson_result)
source("C:/Users/simon/Project/python3/spotify-stats/main.R")
clear
library(readxl)
print("Initializing")
result_excel <- read_excel("C:/Users/simon/Project/python3/spotify-stats/result_excel.xlsx")
table <- result_excel
table <- table[order(table$Read), ]
popularities <- table$Popularity
reads <- table$Read
x <- seq(1, 201)
print("Generate graphic")
plot(x, reads, col="red", xlab="Music", ylab="Reads")
par(new=TRUE)
plot(x, popularities, col="blue", axes = FALSE, xlab="", ylab="")
axis(side = 4, at = pretty(range(popularities)))
mtext("Popularity", side = 4, line = 50)
print("Test corelation from pearson")
pearson_result <- cor.test(popularities, reads)
pearson_result
abline(pearson_result)
print("Cor.test")
cor.test(popularities, reads)
correlationTest <- cor.test(popularities, reads)
correlationTest
print("Linear model")
lm(popularities ~ reads)
linearModel <- lm(popularities ~ reads)
linearModel
source("C:/Users/simon/Project/python3/spotify-stats/main.R")
source("C:/Users/simon/Project/python3/spotify-stats/main.R")
source("C:/Users/simon/Project/python3/spotify-stats/main.R")
source("C:/Users/simon/Project/python3/spotify-stats/main.R")
source("C:/Users/simon/Project/python3/spotify-stats/main.R")
source("C:/Users/simon/Project/python3/spotify-stats/main.R")
library(readxl)
print("Initializing")
result_excel <- read_excel("C:/Users/simon/Project/python3/spotify-stats/result_excel.xlsx")
table <- result_excel
table <- table[order(table$Read), ]
popularities <- table$Popularity
reads <- table$Read
x <- seq(1, 201)
print("Generate graphic")
plot(x, reads, col="red", xlab="Music", ylab="Reads")
par(new=TRUE)
plot(x, popularities, col="blue", axes = FALSE, xlab="", ylab="")
axis(side = 4, at = pretty(range(popularities)))
mtext("Popularity", side = 4, line = 50)
print("Test corelation from pearson")
pearson_result <- cor.test(popularities, reads)
print(pearson_result)
print("Test corelation from spearman")
print(cor.test(popularities, reads, method="spearman"))
print("Linear model")
linearModel <- lm(popularities ~ reads)
print(linearModel)
abline(linearModel)
source("C:/Users/simon/Project/python3/spotify-stats/main.R")
source("C:/Users/simon/Project/python3/spotify-stats/main.R")
filter(table, table$Popularity > 0)
filter(table, table$Popularity > 0)
table
table <- table[filter(table, table$Popularity > 0)]
table[table[, "Popularity"] > 0,]
source("C:/Users/simon/Project/python3/spotify-stats/main.R")
source("C:/Users/simon/Project/python3/spotify-stats/main.R")
lengths(table)
seq(1, length(table))
seq(1, length(table)[0])
lengths(reads)
source("C:/Users/simon/Project/python3/spotify-stats/main.R")
source("C:/Users/simon/Project/python3/spotify-stats/main.R")
source("C:/Users/simon/Project/python3/spotify-stats/main.R")
source("C:/Users/simon/Project/python3/spotify-stats/main.R")
# Change working directory
setwd("C:/Users/simon/Project/python3/spotify-stats")
source("C:/Users/simon/Project/python3/spotify-stats/main.R")
source("C:/Users/simon/Project/python3/spotify-stats/main.R")
